process MONITOR = { 
	
	source = HcalTBSource { 
		untracked vstring fileNames = { '/uscms_data/d1/jmmans/tutorial_data/HTB_011609.root', 
						'/uscms_data/d1/jmmans/tutorial_data/HTB_011440.root', 
						'/uscms_data/d1/jmmans/tutorial_data/HTB_019016.root'}
		untracked int32 maxEvents = -1
                untracked vstring streams = { 'HCAL_DCC020:20','HCAL_Trigger','HCAL_SlowData','HCAL_TDC:5' }
	}
	
	service = DaqMonitorROOTBackEnd{ 
		untracked int32 vsize = 1000
		untracked int32 hsize = 1000
	}
	
	service = MonitorDaemon{
	       #	 if true, will automatically start DQM thread in background
	       #  (default: false)
	       untracked bool AutoInstantiate = true

	        # if >=0, upon a connection problem, the source will automatically 
		# attempt to reconnect with a time delay (secs) specified here 
	        # (default: 5)
	        untracked int32 reconnect_delay = 5

       # collector hostname
       # (default: localhost)
       untracked string DestinationAddress = "localhost"

       # port for communicating with collector
       # (default: 9090)
       untracked int32 SendPort = 9090

       # monitoring period in ms (i.e. how often monitoring elements 
       # are shipped to the collector
       # (default: 1000)
       untracked int32 UpdateDelay = 1000
       # name of DQM source
       # (default: DQMSource)
       untracked string NameAsSource = "HcalMonitor"
     }


	module hcalMonitor = HcalMonitorModule{
	       untracked bool DaqMonitorBEInterface = true
	       untracked bool MonitorDaemon = true
	       untracked string outputFile = 'HcalMonitorModule.root'
	       untracked string readoutMapSource = 'file:///uscms_data/d1/jmmans/tutorial_data/maps/hbho_ring12_tb04.txt'
	       int32 HcalFirstFED = 20
               vint32 FEDs = { 20 }

	       untracked bool RecHitsPerChannel = true
	       untracked bool RecHitMonitor = true
	       untracked bool DigiMonitor = true
	       untracked bool DataFormatMonitor = true
	       untracked bool PedestalMonitor = true
	       untracked bool PedestalsPerChannel = true
        }
     
     	module hcalunpacker = HcalRawToDigi {
                int32 firstSample = 5
                int32 lastSample = 14
                untracked int32 HcalFirstFED = 20
                untracked vint32 FEDs = { 20 }
		bool FilterDataQuality = true
		bool FilterAmplitude = false
		int32 FilterAmpBegin = 4
		int32 FilterAmpEnd = 7
		double FilterAmpLevel = 22.0
		untracked bool UnpackCalib = false	
	}

	module recohbhe = HcalSimpleReconstructor {
	        int32 firstSample = 4
	        int32 samplesToAdd = 4
	        string Subdetector = 'HBHE'
		string digiLabel = 'hcalunpacker'
	        bool correctForTimeslew = true
	}

	module recoho = HcalSimpleReconstructor {
	        int32 firstSample = 4
	        int32 samplesToAdd = 4
	        string Subdetector = 'HO'
		string digiLabel = 'hcalunpacker'
	        bool correctForTimeslew = false
	}

	module recohf = HcalSimpleReconstructor {
	        int32 firstSample = 4
	        int32 samplesToAdd = 4
	        string Subdetector = 'HF'
		string digiLabel = 'hcalunpacker'
	        bool correctForTimeslew = false
	}

	module tbunpacker = HcalTBObjectUnpacker {
	       untracked int32 HcalTriggerFED  = 1
	       untracked int32 HcalSlowDataFED = 3
	       untracked int32 HcalTDCFED      = 5
	       untracked int32 HcalSourcePosFED = -1
	       untracked bool IncludeUnmatchedHits = false
	}

	module myfilter = HcalTBTriggerFilter {
                bool AllowPedestal = true
                bool AllowPedestalInSpill = true
                bool AllowPedestalOutSpill = true
                bool AllowLaser = false
                bool AllowLED = false
                bool AllowBeam = true
        }

	path p = { tbunpacker, hcalunpacker, myfilter, recoho, recohf, recohbhe, hcalMonitor}


	// stuff for the calibration system
	es_source = XMLIdealGeometryESSource {
		  FileInPath GeometryConfiguration = "Geometry/CMSCommonData/data/configuration.xml"
		  string rootNodeName = "cms:OCMS"
   }

  es_module = HcalHardcodeGeometryEP {}
  es_module = CaloTowerTopologyBuilder {}
  es_module = HcalTopologyIdealEP {}
  es_module = CaloTowerHardcodeGeometryEP {}
  es_module = CaloGeometryBuilder {}

  es_module = HcalDbProducer {}

  es_source es_hardcode = HcalHardcodeCalibrations { untracked vstring toGet = {"Pedestals", "PedestalWidths", "Gains", "GainWidths", "QIEShape", "QIEData", "ChannelQuality"}}
 es_source es_ascii = HcalTextCalibrations { VPSet input = {
                                              {
						string object = "ElectronicsMap"
						string file = "hbho_ring12_tb04.txt"
					       }
					      }
					     }

}
