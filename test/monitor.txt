process MONITOR = { 
	
	source = HcalTBSource { 
		untracked vstring fileNames = { '/uscms_data/d1/jmmans/tutorial_data/HTB_011609.root' }
#		untracked vstring fileNames = { '/uscms_data/d1/jmmans/tutorial_data/HTBqc_001042.root' }
#		untracked vstring fileNames = { '/uscms_data/d1/wfisher/tmp_dat/HTBqc_002142.root'}

		untracked int32 maxEvents = -1
                untracked vstring streams = { 'HCAL_DCC020:20','HCAL_Trigger','HCAL_SlowData','HCAL_TDC:5' }
	}
	
	service = DaqMonitorROOTBackEnd{ 
		untracked int32 vsize = 1000
		untracked int32 hsize = 1000
	}
	
	service = MonitorDaemon{
	       #	 if true, will automatically start DQM thread in background
	       #  (default: false)
	       untracked bool AutoInstantiate = true

	        # if >=0, upon a connection problem, the source will automatically 
		# attempt to reconnect with a time delay (secs) specified here 
	        # (default: 5)
	        untracked int32 reconnect_delay = 5

       # collector hostname
       # (default: localhost)
       untracked string DestinationAddress = "localhost"

       # port for communicating with collector
       # (default: 9090)
       untracked int32 SendPort = 9090

       # monitoring period in ms (i.e. how often monitoring elements 
       # are shipped to the collector
       # (default: 1000)
       untracked int32 UpdateDelay = 1000
       # name of DQM source
       # (default: DQMSource)
       untracked string NameAsSource = "HcalMonitor"
     }


	module hcalMonitor = HcalMonitorModule{
	       untracked bool DaqMonitorBEInterface = true
	       untracked bool MonitorDaemon = true
	       untracked string outputFile = 'HcalMonitorModule.root'
	       untracked string readoutMapSource = 'file:///uscms_data/d1/jmmans/tutorial_data/maps/hbho_ring12_tb04.txt'
	       untracked int32 HcalFirstFED = 20
               untracked vint32 FEDs = { 20 }

	       untracked bool RecHitsPerChannel = true
	       untracked bool RecHitMonitor = true
	       untracked bool DigiMonitor = true
	       untracked bool DataFormatMonitor = true

        }
     
     	module unpacker = HcalRawToDigi {
                untracked int32 firstSample = 5
                untracked int32 lastSample = 14
                untracked int32 HcalFirstFED = 20
                untracked vint32 FEDs = { 20 }
		untracked bool FilterDataQuality = true
		untracked bool FilterAmplitude = false
		untracked int32 FilterAmpBegin = 4
		untracked int32 FilterAmpEnd = 7
		untracked double FilterAmpLevel = 22.0
		untracked string readoutMapSource = 'file://hbhe_tb04.txt'
	}

	module reco_hbhe = HcalSimpleReconstructor {
	       untracked int32 firstSample = 4
	       untracked int32 samplesToAdd = 4
	       untracked string Subdetector = 'HBHE'
	}

	module reco_ho = HcalSimpleReconstructor {
	       untracked int32 firstSample = 4
	       untracked int32 samplesToAdd = 4
	       untracked string Subdetector = 'HO'
	}

	module reco_hf = HcalSimpleReconstructor {
	       untracked int32 firstSample = 4
	       untracked int32 samplesToAdd = 4
	       untracked string Subdetector = 'HF'
	}

	module tbunpacker = HcalTBObjectUnpacker {
	       int32 HcalTriggerFED  = 1
	       int32 HcalSlowDataFED = -1
	       int32 HcalTDCFED      = -1
	       bool IncludeUnmatchedHits = false
	}

	module dumper = HcalDigiDump { }
        module dumper2 = HcalRecHitDump { }
	es_module = HcalDbProducer {}
	es_source = HcalHardcodeCalibrations {
		untracked vstring toGet = {
			  "Pedestals","PedestalWidths",
			  "Gains", "GainWidths", "QIEShape", "QIEData",
			  "channelQuality", "electronicsMap"}
	}

	es_source = XMLIdealGeometryESSource {
		FileInPath GeometryConfiguration = 'Geometry/CMSCommonData/data/configuration.xml'
		string rootNodeName = 'cms:OCMS'
	}

        es_module = HcalHardcodeGeometryEP {}
        es_module = CaloTowerHardcodeGeometryEP {}
	es_module = CaloGeometryBuilder {}
	es_module = EcalBarrelGeometryEP {}
	module HcalDbAnalyzer = HcalDbAnalyzer {}

	path p = { unpacker, tbunpacker, reco_ho, reco_hf, reco_hbhe, hcalMonitor}

}
