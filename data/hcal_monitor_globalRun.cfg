
process HCALMONITOR = { 


	include "FWCore/MessageLogger/data/MessageLogger.cfi"
	include "DQM/HcalMonitorModule/test/hcal_dqm_monitor.cfi"

	path p = { hcalDigis, hcalMonitor}


	untracked PSet options = {
		untracked vstring Rethrow = { "ProductNotFound", "TooManyProducts", "TooFewProducts" }
	}
	untracked PSet maxEvents = {untracked int32 input = 1000}

	source = NewEventStreamFileReader{
		untracked vstring fileNames = {
		'/uscms_data/d1/wfisher/tmp_dat/mdaqHAD.00008132.0000.A.test.0.0000.dat'
		}
    
		int32 max_event_size = 7000000
		int32 max_queue_depth = 5
	}

	service = DaqMonitorROOTBackEnd{}
	
	service = MonitorDaemon{
	       #	 if true, will automatically start DQM thread in background
	       #  (default: false)
	       untracked bool AutoInstantiate = true

	       # if >=0, upon a connection problem, the source will automatically 
	       # attempt to reconnect with a time delay (secs) specified here 
	       # (default: 5)
	       untracked int32 reconnect_delay = 5
               # maximum # of reconnection attempts upon connection problems (default: 10)
               untracked int32 maxAttempts2Reconnect	= 10

	       # collector hostname
       	       # (default: localhost)
               untracked string DestinationAddress = "cmsroc2"

               # port for communicating with collector
               # (default: 9090)
               untracked int32 SendPort = 9090

               # monitoring period in ms (i.e. how often monitoring elements 
               # are shipped to the collector
               # (default: 1000)
               untracked int32 UpdateDelay = 1000

               # name of DQM source
               # (default: DQMSource)
               untracked string NameAsSource = "HcalMonitor"
	}

	service = DQMShipMonitoring{
		// event-period for shipping monitoring to collector (default: 25)
		untracked uint32 period = 50
	}

	es_module = HcalDbProducer {}

	es_source es_hardcode = HcalHardcodeCalibrations { untracked vstring toGet = {"Pedestals", "PedestalWidths", "Gains", "GainWidths", "QIEShape", "QIEData", "ChannelQuality"}}

	es_source es_ascii = HcalTextCalibrations { 
		VPSet input = {
                              {string object = "ElectronicsMap" FileInPath file = "DQM/HcalMonitorModule/data/official_emap_14x.txt"
                                                }
                }
	}
}
